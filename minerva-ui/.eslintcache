[{"/Users/scott/PycharmProjects/minerva/minerva-ui/src/index.js":"1","/Users/scott/PycharmProjects/minerva/minerva-ui/src/reportWebVitals.js":"2","/Users/scott/PycharmProjects/minerva/minerva-ui/src/js/theme.js":"3","/Users/scott/PycharmProjects/minerva/minerva-ui/src/js/redux/rootReducer.js":"4","/Users/scott/PycharmProjects/minerva/minerva-ui/src/js/redux/nullStateStubs.js":"5","/Users/scott/PycharmProjects/minerva/minerva-ui/src/js/redux/sagas/rootSaga.js":"6","/Users/scott/PycharmProjects/minerva/minerva-ui/src/js/redux/action-types.js":"7","/Users/scott/PycharmProjects/minerva/minerva-ui/src/js/redux/sagas/getSettingsSaga.js":"8","/Users/scott/PycharmProjects/minerva/minerva-ui/src/js/redux/sagas/getFinObjsSaga.js":"9","/Users/scott/PycharmProjects/minerva/minerva-ui/src/js/redux/sagas/getDataSourcesSaga.js":"10","/Users/scott/PycharmProjects/minerva/minerva-ui/src/js/redux/sagas/getStatSaga.js":"11","/Users/scott/PycharmProjects/minerva/minerva-ui/src/js/redux/sagas/getDataSourcePollsSaga.js":"12","/Users/scott/PycharmProjects/minerva/minerva-ui/src/js/helpers.js":"13","/Users/scott/PycharmProjects/minerva/minerva-ui/src/js/components/dialogs/AddFinancialObjectDialog.jsx":"14","/Users/scott/PycharmProjects/minerva/minerva-ui/src/js/components/dialogs/SettingsDialog.jsx":"15","/Users/scott/PycharmProjects/minerva/minerva-ui/src/js/redux/actions.js":"16","/Users/scott/PycharmProjects/minerva/minerva-ui/src/js/components/dialogs/DataSourcesDialog.jsx":"17","/Users/scott/PycharmProjects/minerva/minerva-ui/src/js/containers/NavBar.jsx":"18","/Users/scott/PycharmProjects/minerva/minerva-ui/src/js/containers/DisplayPane.jsx":"19","/Users/scott/PycharmProjects/minerva/minerva-ui/src/js/containers/ObjectPane.jsx":"20","/Users/scott/PycharmProjects/minerva/minerva-ui/src/js/containers/App.jsx":"21","/Users/scott/PycharmProjects/minerva/minerva-ui/src/js/components/displays/StatisticsDisplay.jsx":"22","/Users/scott/PycharmProjects/minerva/minerva-ui/src/js/components/displays/GraphDisplay.jsx":"23","/Users/scott/PycharmProjects/minerva/minerva-ui/src/js/components/displays/GeneralDisplay.jsx":"24","/Users/scott/PycharmProjects/minerva/minerva-ui/src/js/components/displays/ObjectList.jsx":"25","/Users/scott/PycharmProjects/minerva/minerva-ui/src/js/components/displays/CalendarYearReturns.jsx":"26","/Users/scott/PycharmProjects/minerva/minerva-ui/src/js/components/displays/ReturnsChart.jsx":"27","/Users/scott/PycharmProjects/minerva/minerva-ui/src/js/components/displays/TimeWindowReturns.jsx":"28","/Users/scott/PycharmProjects/minerva/minerva-ui/src/js/redux/store.ts":"29","/Users/scott/PycharmProjects/minerva/minerva-ui/src/js/redux/storeTypes.ts":"30"},{"size":849,"mtime":1611281561169,"results":"31","hashOfConfig":"32"},{"size":362,"mtime":1604271308458,"results":"33","hashOfConfig":"32"},{"size":316,"mtime":1606345124069,"results":"34","hashOfConfig":"32"},{"size":1379,"mtime":1607647100191,"results":"35","hashOfConfig":"32"},{"size":688,"mtime":1611281561175,"results":"36","hashOfConfig":"32"},{"size":447,"mtime":1607647100192,"results":"37","hashOfConfig":"32"},{"size":1178,"mtime":1607618192340,"results":"38","hashOfConfig":"32"},{"size":639,"mtime":1607618192342,"results":"39","hashOfConfig":"32"},{"size":603,"mtime":1607648298588,"results":"40","hashOfConfig":"32"},{"size":620,"mtime":1607647100191,"results":"41","hashOfConfig":"32"},{"size":1545,"mtime":1611281561175,"results":"42","hashOfConfig":"32"},{"size":653,"mtime":1607618192341,"results":"43","hashOfConfig":"32"},{"size":247,"mtime":1608066421973,"results":"44","hashOfConfig":"32"},{"size":1301,"mtime":1608241284255,"results":"45","hashOfConfig":"32"},{"size":989,"mtime":1611281561173,"results":"46","hashOfConfig":"32"},{"size":1235,"mtime":1607647100191,"results":"47","hashOfConfig":"32"},{"size":4630,"mtime":1610483484493,"results":"48","hashOfConfig":"32"},{"size":2012,"mtime":1610483484494,"results":"49","hashOfConfig":"32"},{"size":2291,"mtime":1611283196541,"results":"50","hashOfConfig":"32"},{"size":1992,"mtime":1611283196534,"results":"51","hashOfConfig":"32"},{"size":1140,"mtime":1611281561173,"results":"52","hashOfConfig":"32"},{"size":891,"mtime":1611281561172,"results":"53","hashOfConfig":"32"},{"size":411,"mtime":1611281561171,"results":"54","hashOfConfig":"32"},{"size":2346,"mtime":1611283196539,"results":"55","hashOfConfig":"32"},{"size":717,"mtime":1607647818152,"results":"56","hashOfConfig":"32"},{"size":2702,"mtime":1611283196537,"results":"57","hashOfConfig":"32"},{"size":2326,"mtime":1611283196536,"results":"58","hashOfConfig":"32"},{"size":3040,"mtime":1611283196530,"results":"59","hashOfConfig":"32"},{"size":1799,"mtime":1611289943668,"results":"60","hashOfConfig":"32"},{"size":1646,"mtime":1611289697306,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"x299bk",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"64"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"64"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"64"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"64"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"64"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"64"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"64"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"64"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"64"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"64"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"64"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"64"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"64"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/scott/PycharmProjects/minerva/minerva-ui/src/index.js",[],["136","137"],"/Users/scott/PycharmProjects/minerva/minerva-ui/src/reportWebVitals.js",[],"/Users/scott/PycharmProjects/minerva/minerva-ui/src/js/theme.js",[],"/Users/scott/PycharmProjects/minerva/minerva-ui/src/js/redux/rootReducer.js",["138"],"// eslint-disable-next-line no-unused-vars\nimport React from \"react\";\nimport {\n  SET_ACTIVE_FINANCIAL_OBJECT,\n  SET_ACTIVE_BENCHMARK_DEFAULT_FINANCIAL_OBJECT,\n  FIN_OBJS_LOADED,\n  STATISTICS_LOADED,\n  BENCHMARK_DEFAULT_STATISTICS_LOADED,\n  DATA_SOURCES_LOADED,\n  DATA_SOURCE_POLLS_LOADED,\n  SETTINGS_LOADED,\n} from \"./action-types\";\n\nconst rootReducer = (state, action) => {\n  switch (action.type) {\n    case DATA_SOURCES_LOADED:\n      return Object.assign({}, state, {\n        dataSources: action.payload,\n      });\n    case DATA_SOURCE_POLLS_LOADED:\n      return Object.assign({}, state, {\n        dataSources: action.payload,\n      });\n    case SETTINGS_LOADED:\n      return Object.assign({}, state, {\n        settings: action.payload,\n      });\n    case FIN_OBJS_LOADED:\n      return Object.assign({}, state, {\n        finObjs: action.payload,\n      });\n    case STATISTICS_LOADED:\n      return Object.assign({}, state, {\n        statistics: action.payload,\n      });\n    case SET_ACTIVE_FINANCIAL_OBJECT:\n      return Object.assign({}, state, {\n        activeFinObj: action.payload.activeFinObj,\n      });\n    case SET_ACTIVE_BENCHMARK_DEFAULT_FINANCIAL_OBJECT:\n      return Object.assign({}, state, {\n        activeBenchmarkDefaultFinObj:\n          action.payload.activeBenchmarkDefaultFinObj,\n      });\n    default:\n      return state;\n  }\n};\n\nexport default rootReducer;\n","/Users/scott/PycharmProjects/minerva/minerva-ui/src/js/redux/nullStateStubs.js",[],"/Users/scott/PycharmProjects/minerva/minerva-ui/src/js/redux/sagas/rootSaga.js",[],"/Users/scott/PycharmProjects/minerva/minerva-ui/src/js/redux/action-types.js",[],"/Users/scott/PycharmProjects/minerva/minerva-ui/src/js/redux/sagas/getSettingsSaga.js",["139","140","141"],"import { takeEvery, call, put, putResolve } from \"redux-saga/effects\";\nimport {\n  API_ERRORED,\n  DATA_SOURCES_LOADED,\n  DATA_SOURCES_REQUESTED,\n  SETTINGS_LOADED,\n  SETTINGS_REQUESTED,\n} from \"../action-types\";\n\nimport { apiRoot } from \"../../helpers\";\n\nfunction getSettings() {\n  return fetch(apiRoot + \"/settings\").then((response) => response.json());\n}\n\nfunction* workerSaga() {\n  try {\n    const payload = yield call(getSettings);\n    yield putResolve({ type: SETTINGS_LOADED });\n  } catch (e) {\n    yield put({ type: API_ERRORED });\n  }\n}\n\nexport default function* watcherSaga() {\n  yield takeEvery(SETTINGS_REQUESTED, workerSaga);\n}\n","/Users/scott/PycharmProjects/minerva/minerva-ui/src/js/redux/sagas/getFinObjsSaga.js",[],"/Users/scott/PycharmProjects/minerva/minerva-ui/src/js/redux/sagas/getDataSourcesSaga.js",[],"/Users/scott/PycharmProjects/minerva/minerva-ui/src/js/redux/sagas/getStatSaga.js",[],"/Users/scott/PycharmProjects/minerva/minerva-ui/src/js/redux/sagas/getDataSourcePollsSaga.js",[],"/Users/scott/PycharmProjects/minerva/minerva-ui/src/js/helpers.js",[],"/Users/scott/PycharmProjects/minerva/minerva-ui/src/js/components/dialogs/AddFinancialObjectDialog.jsx",[],"/Users/scott/PycharmProjects/minerva/minerva-ui/src/js/components/dialogs/SettingsDialog.jsx",["142","143","144"],"import React from \"react\";\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  FormLabel,\n  TextField,\n} from \"@material-ui/core\";\n\nimport { apiRoot } from \"../../helpers\";\n\nconst SettingsDialog = (props) => {\n  const handleSubmit = (event) => {\n    event.preventDefault();\n  };\n  return (\n    <div>\n      <Dialog\n        fullWidth\n        maxWidth=\"lg\"\n        open={props.open}\n        onClose={props.handleClose}\n      >\n        <DialogTitle id=\"Settings\">Settings</DialogTitle>\n        <DialogContent>\n          <form>\n            <FormLabel>Default Risk Free Asset</FormLabel>\n            <TextField id=\"defaultRiskFree\" />\n          </form>\n        </DialogContent>\n        <DialogActions>\n          <Button type=\"submit\">Update</Button>\n          <Button onClick={props.handleClose} color=\"secondary\">\n            Cancel\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default SettingsDialog;\n","/Users/scott/PycharmProjects/minerva/minerva-ui/src/js/redux/actions.js",["145","146"],"import {\n  BENCHMARK_DEFAULT_STATISTICS_REQUESTED,\n  FIN_OBJS_REQUESTED,\n  STATISTICS_REQUESTED,\n  SET_ACTIVE_FINANCIAL_OBJECT,\n  SET_ACTIVE_BENCHMARK_DEFAULT_FINANCIAL_OBJECT,\n  DATA_SOURCES_REQUESTED,\n  DATA_SOURCE_POLLS_REQUESTED,\n  SETTINGS_REQUESTED,\n} from \"./action-types\";\n\nconst apiRoot = process.env.API_ROOT;\n\nexport function getFinObjs() {\n  return { type: FIN_OBJS_REQUESTED };\n}\n\nexport function getDataSources() {\n  return { type: DATA_SOURCES_REQUESTED };\n}\n\nexport function getDataSourcePolls() {\n  return { type: DATA_SOURCE_POLLS_REQUESTED };\n}\n\nexport function getSettings() {\n  return { type: SETTINGS_REQUESTED };\n}\n\nexport function getStatistics(\n  foid = null,\n  freq_code = null,\n  start = null,\n  end = null,\n  benchmark_foid = null\n) {\n  return {\n    type: STATISTICS_REQUESTED,\n    foid: foid,\n    freq_code: freq_code,\n    start: start,\n    end: end,\n    benchmark_foid: benchmark_foid,\n  };\n}\n\nexport function setActiveFinObj(fo) {\n  return {\n    type: SET_ACTIVE_FINANCIAL_OBJECT,\n    payload: { activeFinObj: fo },\n  };\n}\n\nexport function setActiveBenchmarkDefaultFinObj(fo) {\n  return {\n    type: SET_ACTIVE_BENCHMARK_DEFAULT_FINANCIAL_OBJECT,\n    payload: { activeBenchmarkDefaultFinObj: fo },\n  };\n}\n","/Users/scott/PycharmProjects/minerva/minerva-ui/src/js/components/dialogs/DataSourcesDialog.jsx",["147","148","149","150"],"import React, { useState } from \"react\";\nimport {\n  Button,\n  Container,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  FormLabel,\n  Grid,\n  TextField,\n} from \"@material-ui/core\";\nimport { spacing } from \"@material-ui/system\";\n\nimport { apiRoot } from \"../../helpers\";\n\nconst DataSourcesDialog = (props) => {\n  const [dataSourceAddOpen, setDataSourceAddOpen] = useState(false);\n\n  const handleSourceAddOpen = () => {\n    setDataSourceAddOpen(true);\n  };\n  const handleSourceAddClose = () => {\n    setDataSourceAddOpen(false);\n  };\n\n  const handleSubmitAdd = (event) => {\n    event.preventDefault();\n    let newSource = {\n      name: event.target[\"dsnNew\"].value,\n      hierarchy_rank: props.dataSources.length + 1,\n      api_key: \"\",\n    };\n    const request = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(newSource),\n    };\n    fetch(apiRoot + \"/sources\", request)\n      .then((response) => response.json())\n      .then(props.refreshDataSources());\n    handleSourceAddClose();\n  };\n\n  const handleSubmitAll = (event) => {\n    event.preventDefault();\n\n    for (let source of props.dataSources) {\n      let sourceUpdate = {\n        name: event.target[`dsn${source.source_id}`].value,\n        hierarchy_rank: event.target[`dsr${source.source_id}`].value,\n        api_key: event.target[`dsk${source.source_id}`].value,\n      };\n      const request = {\n        method: \"PUT\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(sourceUpdate),\n      };\n      fetch(\n        apiRoot + \"/sources/\" + source.source_id,\n        request\n      ).then((response) => response.json());\n    }\n    props.refreshDataSources();\n    props.handleClose();\n  };\n\n  return (\n    <div>\n      <Dialog\n        fullWidth\n        maxWidth=\"lg\"\n        open={props.open}\n        onClose={props.handleClose}\n      >\n        <DialogTitle id=\"dataSourcesDialog\">Data Source Management</DialogTitle>\n        <DialogContent>\n          <h3>Manage Data Sources</h3>\n          <form onSubmit={handleSubmitAll} autoComplete=\"off\">\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"space-evenly\"\n              alignItems=\"baseline\"\n            >\n              <Grid container item xs={12} spacing={3}>\n                <Grid item xs={4}>\n                  Data Source Name\n                </Grid>\n                <Grid item xs={2}>\n                  Source Rank\n                </Grid>\n                <Grid item xs={5}>\n                  API Key\n                </Grid>\n              </Grid>\n              <br />\n              {props.dataSources.map((el) => (\n                <>\n                  <Grid container item xs={12} spacing={3}>\n                    <Grid item xs={4}>\n                      <TextField\n                        id={\"dsn\" + el.source_id}\n                        key={\"dsn\" + el.source_id}\n                        defaultValue={el.name}\n                        fullWidth\n                      />\n                    </Grid>\n                    <Grid item xs={2}>\n                      <TextField\n                        id={\"dsr\" + el.source_id}\n                        key={\"dsr\" + el.source_id}\n                        defaultValue={el.hierarchy_rank}\n                        fullwidth\n                      />\n                    </Grid>\n                    <Grid item xs={5}>\n                      <TextField\n                        id={\"dsk\" + el.source_id}\n                        key={\"dsk\" + el.source_id}\n                        defaultValue={el.api_key}\n                        fullWidth\n                      />\n                    </Grid>\n                  </Grid>\n                </>\n              ))}\n              <DialogActions>\n                <br />\n                <Button type=\"submit\">Update</Button>\n                <Button onClick={props.handleClose} color=\"secondary\">\n                  Cancel\n                </Button>\n              </DialogActions>\n            </Grid>\n          </form>\n          <br />\n          <h3>Add New Data Source</h3>\n          <Dialog open={dataSourceAddOpen} onClose={handleSourceAddClose}>\n            {\n              <form onSubmit={handleSubmitAdd}>\n                <TextField id={\"dsnNew\"} key={\"dsnNew\"} />\n                <Button type=\"submit\">Add</Button>\n              </form>\n            }\n          </Dialog>\n\n          <Button variant=\"outlined\" onClick={handleSourceAddOpen}>\n            Add\n          </Button>\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default DataSourcesDialog;\n","/Users/scott/PycharmProjects/minerva/minerva-ui/src/js/containers/NavBar.jsx",["151","152"],"import React, { useState, useEffect } from \"react\";\nimport { AppBar, Button, Modal, Toolbar } from \"@material-ui/core\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport Shuffle from \"@material-ui/icons/Shuffle\";\nimport DataSourcesDialog from \"../components/dialogs/DataSourcesDialog\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getDataSources } from \"../redux/actions\";\nimport SettingsDialog from \"../components/dialogs/SettingsDialog\";\n\nconst NavBar = () => {\n  const [settingsOpen, setSettingsOpen] = React.useState(false);\n  const [dataSourcesOpen, setDataSourcesOpen] = useState(false);\n  const dataSources = useSelector((state) => state.dataSources);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getDataSources());\n  }, [dispatch]);\n\n  const handleSettingsOpen = () => {\n    setSettingsOpen(true);\n  };\n\n  const handleSettingsClose = () => {\n    setSettingsOpen(false);\n  };\n\n  const handleDataSourcesOpen = () => {\n    setDataSourcesOpen(true);\n  };\n\n  const handleDataSourcesClose = () => {\n    setDataSourcesOpen(false);\n  };\n\n  const refreshDataSources = () => {\n    dispatch(getDataSources());\n  };\n\n  return (\n    <div>\n      <Toolbar>\n        <Button\n          style={{ marginLeft: 32 }}\n          variant=\"outlined\"\n          startIcon={<SettingsIcon />}\n          onClick={handleSettingsOpen}\n        >\n          Settings\n        </Button>\n        <SettingsDialog open={settingsOpen} handleClose={handleSettingsClose} />\n        <Button\n          style={{ marginLeft: 32 }}\n          variant=\"outlined\"\n          startIcon={<Shuffle />}\n          onClick={handleDataSourcesOpen}\n        >\n          Data Sources\n        </Button>\n        <DataSourcesDialog\n          dataSources={dataSources}\n          open={dataSourcesOpen}\n          handleOpen={handleDataSourcesOpen}\n          handleClose={handleDataSourcesClose}\n          refreshDataSources={refreshDataSources}\n        />\n      </Toolbar>\n    </div>\n  );\n};\n\nexport default NavBar;\n","/Users/scott/PycharmProjects/minerva/minerva-ui/src/js/containers/DisplayPane.jsx",["153","154"],"import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { AppBar, Tab, Tabs } from \"@material-ui/core\";\nimport { TabContext, TabList, TabPanel } from \"@material-ui/lab\";\nimport { getStatistics } from \"../redux/actions\";\nimport StatisticsDisplay from \"../components/displays/StatisticsDisplay\";\nimport GeneralDisplay from \"../components/displays/GeneralDisplay\";\nimport GraphDisplay from \"../components/displays/GraphDisplay\";\n\nconst DisplayPane = () => {\n  const activeFinObj = useSelector((state) => state.activeFinObj);\n  const activeBenchmarkDefaultFinObj = useSelector(\n    (state) => state.activeBenchmarkDefaultFinObj\n  );\n  const finObjs = useSelector((state) => state.finObjs);\n  const statistics = useSelector((state) => state.statistics);\n  const dataSources = useSelector((state) => state.dataSources);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(\n      getStatistics(activeFinObj.foid, \"M\", null, null, activeFinObj.benchmark)\n    );\n  }, [dispatch, activeFinObj, activeBenchmarkDefaultFinObj]);\n\n  const [value, setValue] = React.useState(\"2\");\n\n  const finObjLookup = Object.fromEntries(\n    finObjs.map((fo) => [fo.foid, fo.name])\n  );\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <>\n      <TabContext value={value}>\n        <TabList onChange={handleChange}>\n          <Tab label=\"General\" value=\"1\" />\n          <Tab label=\"Statistics\" value=\"2\" />\n          <Tab label=\"Graph\" value=\"3\" />\n        </TabList>\n        <TabPanel value=\"1\">\n          <GeneralDisplay\n            activeFinObj={activeFinObj}\n            dataSources={dataSources}\n            finObjsLookup={finObjLookup}\n          />\n        </TabPanel>\n        <TabPanel value=\"2\">\n          <StatisticsDisplay\n            activeFinObj={activeFinObj}\n            activeBenchmarkDefaultFinObj={activeBenchmarkDefaultFinObj}\n            statistics={statistics}\n          />\n        </TabPanel>\n        <TabPanel value=\"3\">\n          <GraphDisplay\n            activeFinObj={activeFinObj}\n            activeBenchmarkDefaultFinObj={activeBenchmarkDefaultFinObj}\n            statistics={statistics}\n          />\n        </TabPanel>\n      </TabContext>\n    </>\n  );\n};\n\nexport default DisplayPane;\n","/Users/scott/PycharmProjects/minerva/minerva-ui/src/js/containers/ObjectPane.jsx",["155","156"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Button } from \"@material-ui/core\";\nimport {\n  getFinObjs,\n  setActiveFinObj,\n  setActiveBenchmarkDefaultFinObj,\n} from \"../redux/actions\";\nimport ObjectList from \"../components/displays/ObjectList\";\nimport { nullActiveBenchmarkDefaultFinObj } from \"../redux/nullStateStubs\";\nimport Typography from \"@material-ui/core/Typography\";\nimport AddFinancialObjectDialog from \"../components/dialogs/AddFinancialObjectDialog\";\n\nconst ObjectPane = () => {\n  const [addOpen, setAddOpen] = useState(false);\n  const finObjs = useSelector((state) => state.finObjs);\n  const activeFinObj = useSelector((state) => state.activeFinObj);\n  const activeBenchmarkDefaultFinObj = useSelector(\n    (state) => state.activeBenchmarkDefaultFinObj\n  );\n  const dispatch = useDispatch();\n\n  const handleAddOpen = () => {\n    setAddOpen(true);\n  };\n\n  const handleAddClose = () => {\n    setTimeout(dispatch(getFinObjs()), 500);\n    setAddOpen(false);\n  };\n\n  const handleListItemClick = (event) => {\n    let foid = Number(event.target.id.slice(4));\n    let newFo = finObjs.find((obj) => obj.foid === foid);\n    dispatch(setActiveFinObj(newFo));\n    if (newFo.benchmark) {\n      let newBmFo = finObjs.find((obj) => obj.foid === newFo.benchmark);\n      dispatch(setActiveBenchmarkDefaultFinObj(newBmFo));\n    } else {\n      dispatch(\n        setActiveBenchmarkDefaultFinObj(nullActiveBenchmarkDefaultFinObj)\n      );\n    }\n  };\n\n  useEffect(() => {\n    dispatch(getFinObjs());\n  }, [dispatch, addOpen]);\n\n  return (\n    <>\n      <h3>Database Objects</h3>\n      <Button onClick={handleAddOpen} variant=\"outlined\">\n        Add New\n      </Button>\n      <AddFinancialObjectDialog open={addOpen} handleClose={handleAddClose} />\n      <ObjectList\n        finObjs={finObjs}\n        activeFinObj={activeFinObj}\n        handleListItemClick={handleListItemClick}\n      />\n    </>\n  );\n};\n\nexport default ObjectPane;\n","/Users/scott/PycharmProjects/minerva/minerva-ui/src/js/containers/App.jsx",["157","158","159","160","161","162"],"import React from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useSelector } from \"react-redux\";\nimport ObjectPane from \"./ObjectPane\";\nimport DisplayPane from \"./DisplayPane\";\nimport { AppBar, Box, Grid } from \"@material-ui/core\";\nimport NavBar from \"./NavBar\";\n\nconst App = () => {\n  // force rerender on any of these changing:\n  const dataSources = useSelector((state) => state.dataSources);\n  const dataSourcePolls = useSelector((state) => state.dataSourcePolls);\n  const activeFinObj = useSelector((state) => state.activeFinObj);\n  const finObjs = useSelector((state) => state.finObjs);\n  return (\n    <Container maxWidth=\"xl\">\n      <AppBar position=\"sticky\">\n        <NavBar />\n      </AppBar>\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"space-between\"\n        alignItems=\"flex-start\"\n        style={{ marginTop: 25 }}\n      >\n        <Grid item xs={2}>\n          <ObjectPane />\n        </Grid>\n        <Grid item xs={10}>\n          <DisplayPane />\n        </Grid>\n      </Grid>\n    </Container>\n  );\n};\n\nexport default App;\n","/Users/scott/PycharmProjects/minerva/minerva-ui/src/js/components/displays/StatisticsDisplay.jsx",["163"],"import React from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport TimeWindowReturns from \"./TimeWindowReturns\";\nimport CalendarYearReturns from \"./CalendarYearReturns\";\nimport ReturnsChart from \"./ReturnsChart\";\n\nconst StatisticsDisplay = (props) => {\n  return (\n    <>\n      <Paper style={{ padding: 5 }} elevation={5}>\n        <TimeWindowReturns\n          activeFinObj={props.activeFinObj}\n          activeBenchmarkDefaultFinObj={props.activeBenchmarkDefaultFinObj}\n          statistics={props.statistics}\n        />\n      </Paper>\n      <br />\n\n      <Paper style={{ padding: 5 }} elevation={5}>\n        <CalendarYearReturns\n          activeFinObj={props.activeFinObj}\n          activeBenchmarkDefaultFinObj={props.activeBenchmarkDefaultFinObj}\n          statistics={props.statistics}\n        />\n      </Paper>\n      <br />\n    </>\n  );\n};\n\nexport default StatisticsDisplay;\n","/Users/scott/PycharmProjects/minerva/minerva-ui/src/js/components/displays/GraphDisplay.jsx",["164"],"import React from \"react\";\nimport ReturnsChart from \"./ReturnsChart\";\nimport StatisticsDisplay from \"./StatisticsDisplay\";\n\nconst GraphDisplay = (props) => {\n  return (\n    <div>\n      <ReturnsChart\n        activeFinObj={props.activeFinObj}\n        activeBenchmarkDefaultFinObj={props.activeBenchmarkDefaultFinObj}\n        statistics={props.statistics}\n      />\n    </div>\n  );\n};\n\nexport default GraphDisplay;\n","/Users/scott/PycharmProjects/minerva/minerva-ui/src/js/components/displays/GeneralDisplay.jsx",["165"],"import React from \"react\";\nimport {\n  Box,\n  Button,\n  makeStyles,\n  MenuItem,\n  Paper,\n  Select,\n  TextField,\n  Typography,\n} from \"@material-ui/core\";\nimport { apiRoot } from \"../../helpers\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    margin: 10,\n    padding: 10,\n  },\n}));\n\nconst GeneralDisplay = (props) => {\n  const styles = useStyles();\n  const handleSubmitAddFeed = (event) => {\n    event.preventDefault();\n    let sourceMatch = props.dataSources.find(\n      (obj) => obj.name === event.target[\"dataSourceName\"].value\n    );\n    let newDSP = {\n      source_id: sourceMatch.source_id,\n      foid: props.activeFinObj.foid,\n      data_source_code: event.target[\"data_source_code\"].value,\n    };\n    const request = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(newDSP),\n    };\n    fetch(apiRoot + \"/sources/polls\", request).then((response) =>\n      response.json()\n    );\n  };\n  return (\n    <div>\n      <Typography>\n        <Paper className={styles.paper}>\n          <h3>{props.activeFinObj.name}</h3>\n          <p>Ticker: {props.activeFinObj.ticker}</p>\n          <p>\n            Default Benchmark:{\" \"}\n            {props.finObjsLookup[props.activeFinObj.benchmark]}\n          </p>\n        </Paper>\n        <Paper className={styles.paper}>\n          <h4>Add Feed</h4>\n          <form onSubmit={handleSubmitAddFeed}>\n            <Select\n              labelId=\"Data Source\"\n              id=\"dataSourceName\"\n              name=\"dataSourceName\"\n              defaultValue=\"--Select One--\"\n            >\n              <MenuItem id={\"dsDefault\"} value=\"--Select One--\">\n                --Select One--\n              </MenuItem>\n              {props.dataSources.map((ds) => (\n                <MenuItem\n                  key={\"ds\" + ds.source_id}\n                  id={\"ds\" + ds.source_id}\n                  value={ds.name}\n                >\n                  {ds.name}\n                </MenuItem>\n              ))}\n            </Select>\n            <br />\n            <TextField\n              id=\"data_source_code\"\n              label=\"Code\"\n              defaultValue={props.activeFinObj.ticker}\n            />\n            <Button type=\"submit\">Add Feed</Button>\n          </form>\n        </Paper>\n      </Typography>\n    </div>\n  );\n};\n\nexport default GeneralDisplay;\n","/Users/scott/PycharmProjects/minerva/minerva-ui/src/js/components/displays/ObjectList.jsx",[],"/Users/scott/PycharmProjects/minerva/minerva-ui/src/js/components/displays/CalendarYearReturns.jsx",["166"],"import React from \"react\";\nimport {\n  Table,\n  TableContainer,\n  TableHead,\n  TableBody,\n  TableRow,\n  TableCell,\n  Typography,\n} from \"@material-ui/core\";\nimport { percentFormat } from \"../../helpers\";\nimport TableContext from \"@material-ui/core/Table/TableContext\";\n\nconst CalendarYearReturns = (props) => {\n  return (\n    <>\n      <Typography color=\"textPrimary\">\n        <h5>Calendar Year Returns</h5>\n        <TableContainer>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>Asset</TableCell>\n                {Object.keys(\n                  props.statistics.absolute_statistics.calendar_year_returns\n                ).map((el) => (\n                  <TableCell key={\"cy\" + el} id={\"cy\" + el}>\n                    {el}\n                  </TableCell>\n                ))}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              <TableRow>\n                <TableCell>{props.activeFinObj.ticker}</TableCell>\n                {Object.keys(\n                  props.statistics.absolute_statistics.calendar_year_returns\n                ).map((el) => (\n                  <TableCell key={\"cyr\" + el} id={\"cyr\" + el}>\n                    {percentFormat(\n                      props.statistics.absolute_statistics\n                        .calendar_year_returns[el]\n                    )}\n                  </TableCell>\n                ))}\n              </TableRow>\n              <TableRow>\n                <TableCell>\n                  {props.activeBenchmarkDefaultFinObj.ticker}\n                </TableCell>\n                {Object.keys(\n                  props.statistics.benchmark_statistics.calendar_year_returns\n                ).map((el) => (\n                  <TableCell key={\"cyrbd\" + el} id={\"cyrbd\" + el}>\n                    {percentFormat(\n                      props.statistics.benchmark_statistics\n                        .calendar_year_returns[el]\n                    )}\n                  </TableCell>\n                ))}\n              </TableRow>\n              <TableRow>\n                <TableCell>Difference</TableCell>\n                {Object.keys(\n                  props.statistics.relative_statistics.calendar_year_returns\n                ).map((el) => (\n                  <TableCell key={\"cyrap\" + el} id={\"cyrap\" + el}>\n                    {percentFormat(\n                      props.statistics.relative_statistics\n                        .calendar_year_returns[el]\n                    )}\n                  </TableCell>\n                ))}\n              </TableRow>\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Typography>\n    </>\n  );\n};\n\nexport default CalendarYearReturns;\n","/Users/scott/PycharmProjects/minerva/minerva-ui/src/js/components/displays/ReturnsChart.jsx",[],"/Users/scott/PycharmProjects/minerva/minerva-ui/src/js/components/displays/TimeWindowReturns.jsx",[],"/Users/scott/PycharmProjects/minerva/minerva-ui/src/js/redux/store.ts",["167","168"],"/Users/scott/PycharmProjects/minerva/minerva-ui/src/js/redux/storeTypes.ts",[],{"ruleId":"169","replacedBy":"170"},{"ruleId":"171","replacedBy":"172"},{"ruleId":"173","severity":1,"message":"174","line":8,"column":3,"nodeType":"175","messageId":"176","endLine":8,"endColumn":38},{"ruleId":"173","severity":1,"message":"177","line":4,"column":3,"nodeType":"175","messageId":"176","endLine":4,"endColumn":22},{"ruleId":"173","severity":1,"message":"178","line":5,"column":3,"nodeType":"175","messageId":"176","endLine":5,"endColumn":25},{"ruleId":"173","severity":1,"message":"179","line":18,"column":11,"nodeType":"175","messageId":"176","endLine":18,"endColumn":18},{"ruleId":"173","severity":1,"message":"180","line":7,"column":3,"nodeType":"175","messageId":"176","endLine":7,"endColumn":20},{"ruleId":"173","severity":1,"message":"181","line":13,"column":10,"nodeType":"175","messageId":"176","endLine":13,"endColumn":17},{"ruleId":"173","severity":1,"message":"182","line":16,"column":9,"nodeType":"175","messageId":"176","endLine":16,"endColumn":21},{"ruleId":"173","severity":1,"message":"183","line":2,"column":3,"nodeType":"175","messageId":"176","endLine":2,"endColumn":41},{"ruleId":"173","severity":1,"message":"184","line":12,"column":7,"nodeType":"175","messageId":"176","endLine":12,"endColumn":14},{"ruleId":"173","severity":1,"message":"185","line":4,"column":3,"nodeType":"175","messageId":"176","endLine":4,"endColumn":12},{"ruleId":"173","severity":1,"message":"180","line":8,"column":3,"nodeType":"175","messageId":"176","endLine":8,"endColumn":20},{"ruleId":"173","severity":1,"message":"186","line":10,"column":3,"nodeType":"175","messageId":"176","endLine":10,"endColumn":12},{"ruleId":"173","severity":1,"message":"187","line":14,"column":10,"nodeType":"175","messageId":"176","endLine":14,"endColumn":17},{"ruleId":"173","severity":1,"message":"188","line":2,"column":10,"nodeType":"175","messageId":"176","endLine":2,"endColumn":16},{"ruleId":"173","severity":1,"message":"189","line":2,"column":26,"nodeType":"175","messageId":"176","endLine":2,"endColumn":31},{"ruleId":"173","severity":1,"message":"188","line":3,"column":10,"nodeType":"175","messageId":"176","endLine":3,"endColumn":16},{"ruleId":"173","severity":1,"message":"190","line":3,"column":23,"nodeType":"175","messageId":"176","endLine":3,"endColumn":27},{"ruleId":"173","severity":1,"message":"191","line":11,"column":8,"nodeType":"175","messageId":"176","endLine":11,"endColumn":18},{"ruleId":"173","severity":1,"message":"192","line":18,"column":9,"nodeType":"175","messageId":"176","endLine":18,"endColumn":37},{"ruleId":"173","severity":1,"message":"191","line":3,"column":8,"nodeType":"175","messageId":"176","endLine":3,"endColumn":18},{"ruleId":"173","severity":1,"message":"193","line":7,"column":18,"nodeType":"175","messageId":"176","endLine":7,"endColumn":21},{"ruleId":"173","severity":1,"message":"194","line":12,"column":9,"nodeType":"175","messageId":"176","endLine":12,"endColumn":20},{"ruleId":"173","severity":1,"message":"195","line":13,"column":9,"nodeType":"175","messageId":"176","endLine":13,"endColumn":24},{"ruleId":"173","severity":1,"message":"196","line":14,"column":9,"nodeType":"175","messageId":"176","endLine":14,"endColumn":21},{"ruleId":"173","severity":1,"message":"197","line":15,"column":9,"nodeType":"175","messageId":"176","endLine":15,"endColumn":16},{"ruleId":"173","severity":1,"message":"198","line":5,"column":8,"nodeType":"175","messageId":"176","endLine":5,"endColumn":20},{"ruleId":"173","severity":1,"message":"199","line":3,"column":8,"nodeType":"175","messageId":"176","endLine":3,"endColumn":25},{"ruleId":"173","severity":1,"message":"193","line":3,"column":3,"nodeType":"175","messageId":"176","endLine":3,"endColumn":6},{"ruleId":"173","severity":1,"message":"200","line":12,"column":8,"nodeType":"175","messageId":"176","endLine":12,"endColumn":20},{"ruleId":"201","severity":1,"message":"202","line":1,"column":8,"nodeType":"175","messageId":"176","endLine":1,"endColumn":13},{"ruleId":"201","severity":1,"message":"203","line":11,"column":7,"nodeType":"175","messageId":"176","endLine":11,"endColumn":20},"no-native-reassign",["204"],"no-negated-in-lhs",["205"],"no-unused-vars","'BENCHMARK_DEFAULT_STATISTICS_LOADED' is defined but never used.","Identifier","unusedVar","'DATA_SOURCES_LOADED' is defined but never used.","'DATA_SOURCES_REQUESTED' is defined but never used.","'payload' is assigned a value but never used.","'DialogContentText' is defined but never used.","'apiRoot' is defined but never used.","'handleSubmit' is assigned a value but never used.","'BENCHMARK_DEFAULT_STATISTICS_REQUESTED' is defined but never used.","'apiRoot' is assigned a value but never used.","'Container' is defined but never used.","'FormLabel' is defined but never used.","'spacing' is defined but never used.","'AppBar' is defined but never used.","'Modal' is defined but never used.","'Tabs' is defined but never used.","'Typography' is defined but never used.","'activeBenchmarkDefaultFinObj' is assigned a value but never used.","'Box' is defined but never used.","'dataSources' is assigned a value but never used.","'dataSourcePolls' is assigned a value but never used.","'activeFinObj' is assigned a value but never used.","'finObjs' is assigned a value but never used.","'ReturnsChart' is defined but never used.","'StatisticsDisplay' is defined but never used.","'TableContext' is defined but never used.","@typescript-eslint/no-unused-vars","'React' is defined but never used.","'reduxDevTools' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]