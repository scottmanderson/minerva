[{"/Users/scott/PycharmProjects/minerva/minerva-ui/src/index.js":"1","/Users/scott/PycharmProjects/minerva/minerva-ui/src/reportWebVitals.js":"2","/Users/scott/PycharmProjects/minerva/minerva-ui/src/js/theme.js":"3","/Users/scott/PycharmProjects/minerva/minerva-ui/src/js/redux/store.js":"4","/Users/scott/PycharmProjects/minerva/minerva-ui/src/js/redux/rootReducer.js":"5","/Users/scott/PycharmProjects/minerva/minerva-ui/src/js/redux/nullStateStubs.js":"6","/Users/scott/PycharmProjects/minerva/minerva-ui/src/js/redux/sagas/rootSaga.js":"7","/Users/scott/PycharmProjects/minerva/minerva-ui/src/js/redux/action-types.js":"8","/Users/scott/PycharmProjects/minerva/minerva-ui/src/js/redux/sagas/getSettingsSaga.js":"9","/Users/scott/PycharmProjects/minerva/minerva-ui/src/js/redux/sagas/getFinObjsSaga.js":"10","/Users/scott/PycharmProjects/minerva/minerva-ui/src/js/redux/sagas/getDataSourcesSaga.js":"11","/Users/scott/PycharmProjects/minerva/minerva-ui/src/js/redux/sagas/getStatSaga.js":"12","/Users/scott/PycharmProjects/minerva/minerva-ui/src/js/redux/sagas/getDataSourcePollsSaga.js":"13","/Users/scott/PycharmProjects/minerva/minerva-ui/src/js/helpers.js":"14","/Users/scott/PycharmProjects/minerva/minerva-ui/src/js/components/dialogs/AddFinancialObjectDialog.jsx":"15","/Users/scott/PycharmProjects/minerva/minerva-ui/src/js/components/dialogs/SettingsDialog.jsx":"16","/Users/scott/PycharmProjects/minerva/minerva-ui/src/js/redux/actions.js":"17","/Users/scott/PycharmProjects/minerva/minerva-ui/src/js/components/dialogs/DataSourcesDialog.jsx":"18","/Users/scott/PycharmProjects/minerva/minerva-ui/src/js/containers/NavBar.jsx":"19","/Users/scott/PycharmProjects/minerva/minerva-ui/src/js/containers/DisplayPane.jsx":"20","/Users/scott/PycharmProjects/minerva/minerva-ui/src/js/containers/ObjectPane.jsx":"21","/Users/scott/PycharmProjects/minerva/minerva-ui/src/js/containers/App.jsx":"22","/Users/scott/PycharmProjects/minerva/minerva-ui/src/js/components/displays/StatisticsDisplay.jsx":"23","/Users/scott/PycharmProjects/minerva/minerva-ui/src/js/components/displays/GraphDisplay.jsx":"24","/Users/scott/PycharmProjects/minerva/minerva-ui/src/js/components/displays/GeneralDisplay.jsx":"25","/Users/scott/PycharmProjects/minerva/minerva-ui/src/js/components/displays/ObjectList.jsx":"26","/Users/scott/PycharmProjects/minerva/minerva-ui/src/js/components/displays/CalendarYearReturns.jsx":"27","/Users/scott/PycharmProjects/minerva/minerva-ui/src/js/components/displays/ReturnsChart.jsx":"28","/Users/scott/PycharmProjects/minerva/minerva-ui/src/js/components/displays/TimeWindowReturns.jsx":"29"},{"size":849,"mtime":1611281561169,"results":"30","hashOfConfig":"31"},{"size":362,"mtime":1604271308458,"results":"32","hashOfConfig":"31"},{"size":316,"mtime":1606345124069,"results":"33","hashOfConfig":"31"},{"size":1732,"mtime":1611281561176,"results":"34","hashOfConfig":"31"},{"size":1379,"mtime":1607647100191,"results":"35","hashOfConfig":"31"},{"size":688,"mtime":1611281561175,"results":"36","hashOfConfig":"31"},{"size":447,"mtime":1607647100192,"results":"37","hashOfConfig":"31"},{"size":1178,"mtime":1607618192340,"results":"38","hashOfConfig":"31"},{"size":639,"mtime":1607618192342,"results":"39","hashOfConfig":"31"},{"size":603,"mtime":1607648298588,"results":"40","hashOfConfig":"31"},{"size":620,"mtime":1607647100191,"results":"41","hashOfConfig":"31"},{"size":1545,"mtime":1611281561175,"results":"42","hashOfConfig":"31"},{"size":653,"mtime":1607618192341,"results":"43","hashOfConfig":"31"},{"size":247,"mtime":1608066421973,"results":"44","hashOfConfig":"31"},{"size":1301,"mtime":1608241284255,"results":"45","hashOfConfig":"31"},{"size":989,"mtime":1611281561173,"results":"46","hashOfConfig":"31"},{"size":1235,"mtime":1607647100191,"results":"47","hashOfConfig":"31"},{"size":4630,"mtime":1610483484493,"results":"48","hashOfConfig":"31"},{"size":2012,"mtime":1610483484494,"results":"49","hashOfConfig":"31"},{"size":2291,"mtime":1611283196541,"results":"50","hashOfConfig":"31"},{"size":1992,"mtime":1611283196534,"results":"51","hashOfConfig":"31"},{"size":1140,"mtime":1611281561173,"results":"52","hashOfConfig":"31"},{"size":891,"mtime":1611281561172,"results":"53","hashOfConfig":"31"},{"size":411,"mtime":1611281561171,"results":"54","hashOfConfig":"31"},{"size":2346,"mtime":1611283196539,"results":"55","hashOfConfig":"31"},{"size":717,"mtime":1607647818152,"results":"56","hashOfConfig":"31"},{"size":2702,"mtime":1611283196537,"results":"57","hashOfConfig":"31"},{"size":2326,"mtime":1611283196536,"results":"58","hashOfConfig":"31"},{"size":3040,"mtime":1611283196530,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"x299bk",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"62"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"62"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"62"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"62"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"62"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"62"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"62"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"62"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/scott/PycharmProjects/minerva/minerva-ui/src/index.js",[],["127","128"],"/Users/scott/PycharmProjects/minerva/minerva-ui/src/reportWebVitals.js",[],"/Users/scott/PycharmProjects/minerva/minerva-ui/src/js/theme.js",[],"/Users/scott/PycharmProjects/minerva/minerva-ui/src/js/redux/store.js",["129","130"],"import React from \"react\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport logger from \"redux-logger\";\n\nimport rootReducer from \"./rootReducer\";\nimport rootSaga from \"./sagas/rootSaga\";\nimport { nullStatStub } from \"./nullStateStubs\";\n\nconst reduxDevTools =\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\n\nconst sagaMiddleware = createSagaMiddleware();\nconst storeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst initialState = {\n  finObjs: [\n    {\n      foid: 1,\n      name: \"SPDR S&P 500 Index ETF\",\n      report_name: \"SPY\",\n      ticker: \"SPY\",\n    },\n    {\n      foid: 2,\n      name: \"Vanguard Emerging Markets ETF\",\n      report_name: \"VWO\",\n      ticker: \"VWO\",\n    },\n  ],\n  activeFinObj: {\n    foid: 1,\n    name: \"SPDR S&P 500 Index ETF\",\n    report_name: \"S&P 500 ETF\",\n    ticker: \"SPY\",\n    benchmark: 11,\n  },\n  activeBenchmarkDefaultFinObj: {\n    foid: \"\",\n    name: \"Benchmark\",\n    report_name: \"Benchmark\",\n    ticker: \"Benchmark\",\n  },\n  statistics: {\n    absolute_statistics: nullStatStub,\n    benchmark_statistics: nullStatStub,\n    relative_statistics: nullStatStub,\n    cumulative_json: \"\",\n    cumulative_x: [\"2019-12-31\", \"2020-01-01\"],\n    cumulative_y: [1, 1.005],\n    ts_y: [0],\n    bm_cumulative_x: [],\n    bm_cumulative_y: [],\n  },\n  dataSources: [\n    {\n      source_id: 1,\n      name: \"local-master\",\n      hierarchy_rank: 1,\n      api_key: \"\",\n    },\n  ],\n  dataSourcePolls: [],\n  settings: [],\n};\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  storeEnhancers(applyMiddleware(sagaMiddleware, logger))\n);\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;\n","/Users/scott/PycharmProjects/minerva/minerva-ui/src/js/redux/rootReducer.js",["131"],"// eslint-disable-next-line no-unused-vars\nimport React from \"react\";\nimport {\n  SET_ACTIVE_FINANCIAL_OBJECT,\n  SET_ACTIVE_BENCHMARK_DEFAULT_FINANCIAL_OBJECT,\n  FIN_OBJS_LOADED,\n  STATISTICS_LOADED,\n  BENCHMARK_DEFAULT_STATISTICS_LOADED,\n  DATA_SOURCES_LOADED,\n  DATA_SOURCE_POLLS_LOADED,\n  SETTINGS_LOADED,\n} from \"./action-types\";\n\nconst rootReducer = (state, action) => {\n  switch (action.type) {\n    case DATA_SOURCES_LOADED:\n      return Object.assign({}, state, {\n        dataSources: action.payload,\n      });\n    case DATA_SOURCE_POLLS_LOADED:\n      return Object.assign({}, state, {\n        dataSources: action.payload,\n      });\n    case SETTINGS_LOADED:\n      return Object.assign({}, state, {\n        settings: action.payload,\n      });\n    case FIN_OBJS_LOADED:\n      return Object.assign({}, state, {\n        finObjs: action.payload,\n      });\n    case STATISTICS_LOADED:\n      return Object.assign({}, state, {\n        statistics: action.payload,\n      });\n    case SET_ACTIVE_FINANCIAL_OBJECT:\n      return Object.assign({}, state, {\n        activeFinObj: action.payload.activeFinObj,\n      });\n    case SET_ACTIVE_BENCHMARK_DEFAULT_FINANCIAL_OBJECT:\n      return Object.assign({}, state, {\n        activeBenchmarkDefaultFinObj:\n          action.payload.activeBenchmarkDefaultFinObj,\n      });\n    default:\n      return state;\n  }\n};\n\nexport default rootReducer;\n","/Users/scott/PycharmProjects/minerva/minerva-ui/src/js/redux/nullStateStubs.js",[],"/Users/scott/PycharmProjects/minerva/minerva-ui/src/js/redux/sagas/rootSaga.js",[],"/Users/scott/PycharmProjects/minerva/minerva-ui/src/js/redux/action-types.js",[],"/Users/scott/PycharmProjects/minerva/minerva-ui/src/js/redux/sagas/getSettingsSaga.js",["132","133","134"],"import { takeEvery, call, put, putResolve } from \"redux-saga/effects\";\nimport {\n  API_ERRORED,\n  DATA_SOURCES_LOADED,\n  DATA_SOURCES_REQUESTED,\n  SETTINGS_LOADED,\n  SETTINGS_REQUESTED,\n} from \"../action-types\";\n\nimport { apiRoot } from \"../../helpers\";\n\nfunction getSettings() {\n  return fetch(apiRoot + \"/settings\").then((response) => response.json());\n}\n\nfunction* workerSaga() {\n  try {\n    const payload = yield call(getSettings);\n    yield putResolve({ type: SETTINGS_LOADED });\n  } catch (e) {\n    yield put({ type: API_ERRORED });\n  }\n}\n\nexport default function* watcherSaga() {\n  yield takeEvery(SETTINGS_REQUESTED, workerSaga);\n}\n","/Users/scott/PycharmProjects/minerva/minerva-ui/src/js/redux/sagas/getFinObjsSaga.js",[],"/Users/scott/PycharmProjects/minerva/minerva-ui/src/js/redux/sagas/getDataSourcesSaga.js",[],"/Users/scott/PycharmProjects/minerva/minerva-ui/src/js/redux/sagas/getStatSaga.js",[],"/Users/scott/PycharmProjects/minerva/minerva-ui/src/js/redux/sagas/getDataSourcePollsSaga.js",[],"/Users/scott/PycharmProjects/minerva/minerva-ui/src/js/helpers.js",[],"/Users/scott/PycharmProjects/minerva/minerva-ui/src/js/components/dialogs/AddFinancialObjectDialog.jsx",[],"/Users/scott/PycharmProjects/minerva/minerva-ui/src/js/components/dialogs/SettingsDialog.jsx",["135","136","137"],"import React from \"react\";\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  FormLabel,\n  TextField,\n} from \"@material-ui/core\";\n\nimport { apiRoot } from \"../../helpers\";\n\nconst SettingsDialog = (props) => {\n  const handleSubmit = (event) => {\n    event.preventDefault();\n  };\n  return (\n    <div>\n      <Dialog\n        fullWidth\n        maxWidth=\"lg\"\n        open={props.open}\n        onClose={props.handleClose}\n      >\n        <DialogTitle id=\"Settings\">Settings</DialogTitle>\n        <DialogContent>\n          <form>\n            <FormLabel>Default Risk Free Asset</FormLabel>\n            <TextField id=\"defaultRiskFree\" />\n          </form>\n        </DialogContent>\n        <DialogActions>\n          <Button type=\"submit\">Update</Button>\n          <Button onClick={props.handleClose} color=\"secondary\">\n            Cancel\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default SettingsDialog;\n","/Users/scott/PycharmProjects/minerva/minerva-ui/src/js/redux/actions.js",["138","139"],"import {\n  BENCHMARK_DEFAULT_STATISTICS_REQUESTED,\n  FIN_OBJS_REQUESTED,\n  STATISTICS_REQUESTED,\n  SET_ACTIVE_FINANCIAL_OBJECT,\n  SET_ACTIVE_BENCHMARK_DEFAULT_FINANCIAL_OBJECT,\n  DATA_SOURCES_REQUESTED,\n  DATA_SOURCE_POLLS_REQUESTED,\n  SETTINGS_REQUESTED,\n} from \"./action-types\";\n\nconst apiRoot = process.env.API_ROOT;\n\nexport function getFinObjs() {\n  return { type: FIN_OBJS_REQUESTED };\n}\n\nexport function getDataSources() {\n  return { type: DATA_SOURCES_REQUESTED };\n}\n\nexport function getDataSourcePolls() {\n  return { type: DATA_SOURCE_POLLS_REQUESTED };\n}\n\nexport function getSettings() {\n  return { type: SETTINGS_REQUESTED };\n}\n\nexport function getStatistics(\n  foid = null,\n  freq_code = null,\n  start = null,\n  end = null,\n  benchmark_foid = null\n) {\n  return {\n    type: STATISTICS_REQUESTED,\n    foid: foid,\n    freq_code: freq_code,\n    start: start,\n    end: end,\n    benchmark_foid: benchmark_foid,\n  };\n}\n\nexport function setActiveFinObj(fo) {\n  return {\n    type: SET_ACTIVE_FINANCIAL_OBJECT,\n    payload: { activeFinObj: fo },\n  };\n}\n\nexport function setActiveBenchmarkDefaultFinObj(fo) {\n  return {\n    type: SET_ACTIVE_BENCHMARK_DEFAULT_FINANCIAL_OBJECT,\n    payload: { activeBenchmarkDefaultFinObj: fo },\n  };\n}\n","/Users/scott/PycharmProjects/minerva/minerva-ui/src/js/components/dialogs/DataSourcesDialog.jsx",["140","141","142","143"],"import React, { useState } from \"react\";\nimport {\n  Button,\n  Container,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  FormLabel,\n  Grid,\n  TextField,\n} from \"@material-ui/core\";\nimport { spacing } from \"@material-ui/system\";\n\nimport { apiRoot } from \"../../helpers\";\n\nconst DataSourcesDialog = (props) => {\n  const [dataSourceAddOpen, setDataSourceAddOpen] = useState(false);\n\n  const handleSourceAddOpen = () => {\n    setDataSourceAddOpen(true);\n  };\n  const handleSourceAddClose = () => {\n    setDataSourceAddOpen(false);\n  };\n\n  const handleSubmitAdd = (event) => {\n    event.preventDefault();\n    let newSource = {\n      name: event.target[\"dsnNew\"].value,\n      hierarchy_rank: props.dataSources.length + 1,\n      api_key: \"\",\n    };\n    const request = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(newSource),\n    };\n    fetch(apiRoot + \"/sources\", request)\n      .then((response) => response.json())\n      .then(props.refreshDataSources());\n    handleSourceAddClose();\n  };\n\n  const handleSubmitAll = (event) => {\n    event.preventDefault();\n\n    for (let source of props.dataSources) {\n      let sourceUpdate = {\n        name: event.target[`dsn${source.source_id}`].value,\n        hierarchy_rank: event.target[`dsr${source.source_id}`].value,\n        api_key: event.target[`dsk${source.source_id}`].value,\n      };\n      const request = {\n        method: \"PUT\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(sourceUpdate),\n      };\n      fetch(\n        apiRoot + \"/sources/\" + source.source_id,\n        request\n      ).then((response) => response.json());\n    }\n    props.refreshDataSources();\n    props.handleClose();\n  };\n\n  return (\n    <div>\n      <Dialog\n        fullWidth\n        maxWidth=\"lg\"\n        open={props.open}\n        onClose={props.handleClose}\n      >\n        <DialogTitle id=\"dataSourcesDialog\">Data Source Management</DialogTitle>\n        <DialogContent>\n          <h3>Manage Data Sources</h3>\n          <form onSubmit={handleSubmitAll} autoComplete=\"off\">\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"space-evenly\"\n              alignItems=\"baseline\"\n            >\n              <Grid container item xs={12} spacing={3}>\n                <Grid item xs={4}>\n                  Data Source Name\n                </Grid>\n                <Grid item xs={2}>\n                  Source Rank\n                </Grid>\n                <Grid item xs={5}>\n                  API Key\n                </Grid>\n              </Grid>\n              <br />\n              {props.dataSources.map((el) => (\n                <>\n                  <Grid container item xs={12} spacing={3}>\n                    <Grid item xs={4}>\n                      <TextField\n                        id={\"dsn\" + el.source_id}\n                        key={\"dsn\" + el.source_id}\n                        defaultValue={el.name}\n                        fullWidth\n                      />\n                    </Grid>\n                    <Grid item xs={2}>\n                      <TextField\n                        id={\"dsr\" + el.source_id}\n                        key={\"dsr\" + el.source_id}\n                        defaultValue={el.hierarchy_rank}\n                        fullwidth\n                      />\n                    </Grid>\n                    <Grid item xs={5}>\n                      <TextField\n                        id={\"dsk\" + el.source_id}\n                        key={\"dsk\" + el.source_id}\n                        defaultValue={el.api_key}\n                        fullWidth\n                      />\n                    </Grid>\n                  </Grid>\n                </>\n              ))}\n              <DialogActions>\n                <br />\n                <Button type=\"submit\">Update</Button>\n                <Button onClick={props.handleClose} color=\"secondary\">\n                  Cancel\n                </Button>\n              </DialogActions>\n            </Grid>\n          </form>\n          <br />\n          <h3>Add New Data Source</h3>\n          <Dialog open={dataSourceAddOpen} onClose={handleSourceAddClose}>\n            {\n              <form onSubmit={handleSubmitAdd}>\n                <TextField id={\"dsnNew\"} key={\"dsnNew\"} />\n                <Button type=\"submit\">Add</Button>\n              </form>\n            }\n          </Dialog>\n\n          <Button variant=\"outlined\" onClick={handleSourceAddOpen}>\n            Add\n          </Button>\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default DataSourcesDialog;\n","/Users/scott/PycharmProjects/minerva/minerva-ui/src/js/containers/NavBar.jsx",["144","145"],"import React, { useState, useEffect } from \"react\";\nimport { AppBar, Button, Modal, Toolbar } from \"@material-ui/core\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport Shuffle from \"@material-ui/icons/Shuffle\";\nimport DataSourcesDialog from \"../components/dialogs/DataSourcesDialog\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getDataSources } from \"../redux/actions\";\nimport SettingsDialog from \"../components/dialogs/SettingsDialog\";\n\nconst NavBar = () => {\n  const [settingsOpen, setSettingsOpen] = React.useState(false);\n  const [dataSourcesOpen, setDataSourcesOpen] = useState(false);\n  const dataSources = useSelector((state) => state.dataSources);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getDataSources());\n  }, [dispatch]);\n\n  const handleSettingsOpen = () => {\n    setSettingsOpen(true);\n  };\n\n  const handleSettingsClose = () => {\n    setSettingsOpen(false);\n  };\n\n  const handleDataSourcesOpen = () => {\n    setDataSourcesOpen(true);\n  };\n\n  const handleDataSourcesClose = () => {\n    setDataSourcesOpen(false);\n  };\n\n  const refreshDataSources = () => {\n    dispatch(getDataSources());\n  };\n\n  return (\n    <div>\n      <Toolbar>\n        <Button\n          style={{ marginLeft: 32 }}\n          variant=\"outlined\"\n          startIcon={<SettingsIcon />}\n          onClick={handleSettingsOpen}\n        >\n          Settings\n        </Button>\n        <SettingsDialog open={settingsOpen} handleClose={handleSettingsClose} />\n        <Button\n          style={{ marginLeft: 32 }}\n          variant=\"outlined\"\n          startIcon={<Shuffle />}\n          onClick={handleDataSourcesOpen}\n        >\n          Data Sources\n        </Button>\n        <DataSourcesDialog\n          dataSources={dataSources}\n          open={dataSourcesOpen}\n          handleOpen={handleDataSourcesOpen}\n          handleClose={handleDataSourcesClose}\n          refreshDataSources={refreshDataSources}\n        />\n      </Toolbar>\n    </div>\n  );\n};\n\nexport default NavBar;\n","/Users/scott/PycharmProjects/minerva/minerva-ui/src/js/containers/DisplayPane.jsx",["146","147"],"/Users/scott/PycharmProjects/minerva/minerva-ui/src/js/containers/ObjectPane.jsx",["148","149"],"/Users/scott/PycharmProjects/minerva/minerva-ui/src/js/containers/App.jsx",["150","151","152","153","154","155"],"import React from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useSelector } from \"react-redux\";\nimport ObjectPane from \"./ObjectPane\";\nimport DisplayPane from \"./DisplayPane\";\nimport { AppBar, Box, Grid } from \"@material-ui/core\";\nimport NavBar from \"./NavBar\";\n\nconst App = () => {\n  // force rerender on any of these changing:\n  const dataSources = useSelector((state) => state.dataSources);\n  const dataSourcePolls = useSelector((state) => state.dataSourcePolls);\n  const activeFinObj = useSelector((state) => state.activeFinObj);\n  const finObjs = useSelector((state) => state.finObjs);\n  return (\n    <Container maxWidth=\"xl\">\n      <AppBar position=\"sticky\">\n        <NavBar />\n      </AppBar>\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"space-between\"\n        alignItems=\"flex-start\"\n        style={{ marginTop: 25 }}\n      >\n        <Grid item xs={2}>\n          <ObjectPane />\n        </Grid>\n        <Grid item xs={10}>\n          <DisplayPane />\n        </Grid>\n      </Grid>\n    </Container>\n  );\n};\n\nexport default App;\n","/Users/scott/PycharmProjects/minerva/minerva-ui/src/js/components/displays/StatisticsDisplay.jsx",["156"],"/Users/scott/PycharmProjects/minerva/minerva-ui/src/js/components/displays/GraphDisplay.jsx",["157"],"/Users/scott/PycharmProjects/minerva/minerva-ui/src/js/components/displays/GeneralDisplay.jsx",["158"],"/Users/scott/PycharmProjects/minerva/minerva-ui/src/js/components/displays/ObjectList.jsx",[],"/Users/scott/PycharmProjects/minerva/minerva-ui/src/js/components/displays/CalendarYearReturns.jsx",["159"],"/Users/scott/PycharmProjects/minerva/minerva-ui/src/js/components/displays/ReturnsChart.jsx",[],"/Users/scott/PycharmProjects/minerva/minerva-ui/src/js/components/displays/TimeWindowReturns.jsx",[],{"ruleId":"160","replacedBy":"161"},{"ruleId":"162","replacedBy":"163"},{"ruleId":"164","severity":1,"message":"165","line":1,"column":8,"nodeType":"166","messageId":"167","endLine":1,"endColumn":13},{"ruleId":"164","severity":1,"message":"168","line":10,"column":7,"nodeType":"166","messageId":"167","endLine":10,"endColumn":20},{"ruleId":"164","severity":1,"message":"169","line":8,"column":3,"nodeType":"166","messageId":"167","endLine":8,"endColumn":38},{"ruleId":"164","severity":1,"message":"170","line":4,"column":3,"nodeType":"166","messageId":"167","endLine":4,"endColumn":22},{"ruleId":"164","severity":1,"message":"171","line":5,"column":3,"nodeType":"166","messageId":"167","endLine":5,"endColumn":25},{"ruleId":"164","severity":1,"message":"172","line":18,"column":11,"nodeType":"166","messageId":"167","endLine":18,"endColumn":18},{"ruleId":"164","severity":1,"message":"173","line":7,"column":3,"nodeType":"166","messageId":"167","endLine":7,"endColumn":20},{"ruleId":"164","severity":1,"message":"174","line":13,"column":10,"nodeType":"166","messageId":"167","endLine":13,"endColumn":17},{"ruleId":"164","severity":1,"message":"175","line":16,"column":9,"nodeType":"166","messageId":"167","endLine":16,"endColumn":21},{"ruleId":"164","severity":1,"message":"176","line":2,"column":3,"nodeType":"166","messageId":"167","endLine":2,"endColumn":41},{"ruleId":"164","severity":1,"message":"177","line":12,"column":7,"nodeType":"166","messageId":"167","endLine":12,"endColumn":14},{"ruleId":"164","severity":1,"message":"178","line":4,"column":3,"nodeType":"166","messageId":"167","endLine":4,"endColumn":12},{"ruleId":"164","severity":1,"message":"173","line":8,"column":3,"nodeType":"166","messageId":"167","endLine":8,"endColumn":20},{"ruleId":"164","severity":1,"message":"179","line":10,"column":3,"nodeType":"166","messageId":"167","endLine":10,"endColumn":12},{"ruleId":"164","severity":1,"message":"180","line":14,"column":10,"nodeType":"166","messageId":"167","endLine":14,"endColumn":17},{"ruleId":"164","severity":1,"message":"181","line":2,"column":10,"nodeType":"166","messageId":"167","endLine":2,"endColumn":16},{"ruleId":"164","severity":1,"message":"182","line":2,"column":26,"nodeType":"166","messageId":"167","endLine":2,"endColumn":31},{"ruleId":"164","severity":1,"message":"181","line":3,"column":10,"nodeType":"166","messageId":"167","endLine":3,"endColumn":16},{"ruleId":"164","severity":1,"message":"183","line":3,"column":23,"nodeType":"166","messageId":"167","endLine":3,"endColumn":27},{"ruleId":"164","severity":1,"message":"184","line":11,"column":8,"nodeType":"166","messageId":"167","endLine":11,"endColumn":18},{"ruleId":"164","severity":1,"message":"185","line":18,"column":9,"nodeType":"166","messageId":"167","endLine":18,"endColumn":37},{"ruleId":"164","severity":1,"message":"184","line":3,"column":8,"nodeType":"166","messageId":"167","endLine":3,"endColumn":18},{"ruleId":"164","severity":1,"message":"186","line":7,"column":18,"nodeType":"166","messageId":"167","endLine":7,"endColumn":21},{"ruleId":"164","severity":1,"message":"187","line":12,"column":9,"nodeType":"166","messageId":"167","endLine":12,"endColumn":20},{"ruleId":"164","severity":1,"message":"188","line":13,"column":9,"nodeType":"166","messageId":"167","endLine":13,"endColumn":24},{"ruleId":"164","severity":1,"message":"189","line":14,"column":9,"nodeType":"166","messageId":"167","endLine":14,"endColumn":21},{"ruleId":"164","severity":1,"message":"190","line":15,"column":9,"nodeType":"166","messageId":"167","endLine":15,"endColumn":16},{"ruleId":"164","severity":1,"message":"191","line":5,"column":8,"nodeType":"166","messageId":"167","endLine":5,"endColumn":20},{"ruleId":"164","severity":1,"message":"192","line":3,"column":8,"nodeType":"166","messageId":"167","endLine":3,"endColumn":25},{"ruleId":"164","severity":1,"message":"186","line":3,"column":3,"nodeType":"166","messageId":"167","endLine":3,"endColumn":6},{"ruleId":"164","severity":1,"message":"193","line":12,"column":8,"nodeType":"166","messageId":"167","endLine":12,"endColumn":20},"no-native-reassign",["194"],"no-negated-in-lhs",["195"],"no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","'reduxDevTools' is assigned a value but never used.","'BENCHMARK_DEFAULT_STATISTICS_LOADED' is defined but never used.","'DATA_SOURCES_LOADED' is defined but never used.","'DATA_SOURCES_REQUESTED' is defined but never used.","'payload' is assigned a value but never used.","'DialogContentText' is defined but never used.","'apiRoot' is defined but never used.","'handleSubmit' is assigned a value but never used.","'BENCHMARK_DEFAULT_STATISTICS_REQUESTED' is defined but never used.","'apiRoot' is assigned a value but never used.","'Container' is defined but never used.","'FormLabel' is defined but never used.","'spacing' is defined but never used.","'AppBar' is defined but never used.","'Modal' is defined but never used.","'Tabs' is defined but never used.","'Typography' is defined but never used.","'activeBenchmarkDefaultFinObj' is assigned a value but never used.","'Box' is defined but never used.","'dataSources' is assigned a value but never used.","'dataSourcePolls' is assigned a value but never used.","'activeFinObj' is assigned a value but never used.","'finObjs' is assigned a value but never used.","'ReturnsChart' is defined but never used.","'StatisticsDisplay' is defined but never used.","'TableContext' is defined but never used.","no-global-assign","no-unsafe-negation"]